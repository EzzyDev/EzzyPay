openapi: 3.0.0
info:
  title: Ezzy Pay
  version: '1.0'
  description: платёжное API для совершения массовых транзакций между сторонними приложениями и MediaCube.ID
  contact:
    name: Egor
    email: en@mediacube.network
  termsOfService: 'https://apidocks.ezzy.co/terms'
servers:
  - url: 'https://ezzy.co'
    description: Production
  - description: Production (Legacy)
    url: 'https://mediacube.id'
  - description: Development
    url: 'https://id.mediacube.dev'
paths:
  payments:
    post:
      summary: Создание транзакций
      operationId: post-payments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateResponse'
              examples:
                Example:
                  value:
                    data:
                      request_id: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
                      status: 2
                      err_msg: null
        '401':
          description: У вашего Access Token нет доступа
        '403':
          description: У вашего Identify Key не хватает прав на совершение операции
        '422':
          description: Неверные данные
      description: Создание транзакции
      parameters:
        - schema:
            type: string
            example: Bearer <jwt-token>
          in: header
          name: Authorization
          required: true
        - schema:
            type: string
            example: application/json
          in: header
          required: true
          name: Content-Type
        - schema:
            type: string
            example: application/json
          in: header
          name: Accept
          required: true
        - schema:
            type: string
            example: XMLHttpRequest
          in: header
          name: X-Requested-With
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateRequest'
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
        description: ''
      tags:
        - Payments
    get:
      summary: Получение статуса транзакций
      operationId: get-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description: Статус транзакции
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatusRequest'
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
      parameters:
        - schema:
            type: string
            example: Bearer <jwt-token>
          in: header
          name: Authorization
          description: ''
          required: true
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
        - schema:
            type: string
            example: XMLHttpRequest
          in: header
          name: X-Requested-With
          required: true
        - schema:
            type: string
            example: application/json
          in: header
          name: Accept
          required: true
    parameters: []
  /oauth/token:
    post:
      summary: Аутентификация
      operationId: post-oauth-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                  expires_in:
                    type: string
                  access_token:
                    type: string
                required:
                  - token_type
                  - expires_in
                  - access_token
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                  error_message:
                    type: string
                required:
                  - error
                  - error_description
                  - error_message
      parameters:
        - schema:
            type: string
          in: header
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                client_secret:
                  type: string
                grant_type:
                  type: string
                  description: partner
              required:
                - client_id
                - client_secret
                - grant_type
      description: Получение доступа
      tags:
        - Auth
        - Payments
components:
  schemas:
    TransactionCreateResponse:
      title: Схема создания транзакций (ответ)
      type: object
      properties:
        data:
          type: object
          properties:
            request_id:
              type: string
            status:
              type: string
            err_msg:
              type: string
      x-examples:
        Example:
          data:
            request_id: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
            status: 2
            err_msg: null
        example-2:
          data:
            request_id: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
            status: 3
            err_msg: 3000
      description: ''
    TransactionCreateRequest:
      title: Схема создания транзакций
      type: object
      x-examples: {}
      properties:
        identify:
          type: string
          description: Для получение Identify Key обратитесь в поддержку
        purpose:
          type: integer
          enum:
            - 1
            - 2
          example: 1
        request_id:
          type: string
          minLength: 16
          maxLength: 255
          description: случайно сгенерированная уникальная строка
        description:
          type: string
          description: сообщение о снятии средств с вашего счета Ezzy. Будет отображено во вкладке _Транзакции_ в Mediacube.ID
        data:
          type: array
          items:
            type: object
            properties:
              wallet:
                type: string
                description: существующий номер кошелька пользователя системы MediaCube
                minLength: 16
                maxLength: 16
              amount:
                type: string
              description:
                type: string
                description: сообщение о приходе средств. Будет отображено во вкладке _Транзакции_ в Mediacube.ID
            required:
              - wallet
              - amount
              - description
      required:
        - identify
        - purpose
        - request_id
        - description
        - data
      description: ''
    TransactionStatusRequest:
      title: TarnsactionStatusRequest
      type: object
      properties:
        identify:
          type: string
        request_id:
          type: string
          minLength: 16
          maxLength: 255
          example: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
      required:
        - identify
        - request_id
      x-examples:
        example: {}
      description: ''
  securitySchemes: {}
tags:
  - name: Payments
  - name: Auth
security: []
