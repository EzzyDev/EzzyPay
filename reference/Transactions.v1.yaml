openapi: 3.0.0
info:
  title: McPay
  version: '1.0'
  description: McPay OAauth and McPayments docs
  contact:
    name: Egor
    email: en@mediacube.network
    url: mcpay.io
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.txt'
  termsOfService: 'https://mcpay.io/api/privacy'
servers:
  - url: 'https://mcpay.io'
    description: Production
  - description: Development
    url: 'https://mp.mediacube.dev'
paths:
  /oauth/token:
    post:
      summary: '[OAuth] Token'
      operationId: post-oauth-token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                    enum:
                      - bearer
                  expires_in:
                    type: string
                  access_token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
                  error_message:
                    type: string
                required:
                  - error
                  - error_description
                  - error_message
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: authorization types. see description in Constant-Codes.md
                client_id:
                  type: string
                client_secret:
                  type: string
                scopes:
                  type: string
                code:
                  type: string
                redirect_uri:
                  type: string
                  format: uri
            examples:
              partner:
                value:
                  grant_type: partner
                  client_id: '1'
                  client_secret: secret
              authorization_code:
                value:
                  grant_type: authorization_code
                  client_id: '1'
                  client_secret: secret
                  scopes: user.channels user.common user.contacts
                  code: hjgsfugdskhgvklundfluvhdfnlvhls
                  redirect_url: 'https://yourapp.com/endpoint'
        description: |-
          If the grant_type "partner" is used then code redirect_url and scopes are not used.
          If the grant_type "authentication_code" is used, then code and redirect_url are required. (1)
      description: Auth Token to retrieve data(1)
      tags:
        - Auth
  /oauth/user:
    get:
      summary: '[OAuth] User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  lang:
                    type: string
                  wallet:
                    type: string
                    description: кошелек пользователя (1)
                  kyc_status:
                    type: number
                  is_confirmed:
                    type: boolean
                    description: статус подтверждения почты (1)
                  is_company:
                    type: boolean
                  channels:
                    type: string
                  created_at:
                    type: string
                  country:
                    $ref: '#/components/schemas/Country'
      operationId: get-oauth-user
      description: Getting information about the user by the token(1)
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
      tags:
        - User
      security:
        - Auth code: []
  /oauth/user/channels:
    get:
      summary: '[OAuth] Channel scope'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    youtube_id:
                      type: string
                    title:
                      type: string
                    published_at:
                      type: string
                      format: date
                      example: '2020-05-12'
                    views_count:
                      type: number
                    subscribers_count:
                      type: number
                    is_google_user_owner:
                      type: boolean
                    image:
                      type: string
      operationId: get-oauth-user-channels
      description: Getting info about channels assigned to the user(1)
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
      tags:
        - User
      security:
        - Auth code:
            - user.channels
  /oauth/user/common:
    get:
      summary: '[OAuth] Common scope'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  common:
                    type: object
                    properties:
                      name:
                        type: string
                        description: first name + last name
                      email:
                        type: string
                        format: email
                      lang:
                        type: string
                        description: xx - Language format from ISO
                      is_confirmed:
                        type: boolean
                      avatar:
                        type: string
                        format: uri
                      wallet:
                        type: string
                      profile:
                        $ref: '#/components/schemas/Profile'
                      birthday:
                        type: string
                      sex:
                        type: boolean
                      country_id:
                        type: number
                      country:
                        $ref: '#/components/schemas/Country'
      operationId: get-oauth-user-common
      description: User unformation is in English only(1)
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
      tags:
        - User
      security:
        - Auth code:
            - user.common
  /oauth/user/balance:
    get:
      summary: '[OAuth] Balance scope'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: string
                  real_balance:
                    type: string
                  credit_balance:
                    type: string
      operationId: get-oauth-user-balance
      description: User balance information
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
      tags:
        - User
      security:
        - Auth code:
            - user.common
    parameters: []
  /payments:
    post:
      summary: Transaction creation
      operationId: post-payments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateResponse'
              examples:
                Example:
                  value:
                    data:
                      request_id: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
                      status: '2'
                      err_msg: 'null'
        '401':
          description: Your Access Token does not have access
        '403':
          description: Your Identify Key does not have enough rights to perform the operation
        '422':
          description: Incorrect data
      description: Transaction creation
      parameters:
        - schema:
            type: string
            example: Bearer <jwt-token>
          in: header
          name: Authorization
          required: true
          description: 'Token from partner grant '
        - schema:
            type: string
            example: application/json
          in: header
          required: true
          name: Content-Type
        - schema:
            type: string
            example: application/json
          in: header
          name: Accept
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateRequest'
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
        description: ''
      tags:
        - Payments
      security:
        - Client credentials: []
    get:
      summary: Getting transaction status (1)
      operationId: get-payments
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description: Transaction status (1)
      tags:
        - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatusRequest'
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
        description: ''
      parameters:
        - schema:
            type: string
            example: Bearer <jwt-token>
          in: header
          name: Authorization
          description: ''
          required: true
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
        - schema:
            type: string
            example: application/json
          in: header
          name: Accept
          required: true
      security:
        - Client credentials: []
    parameters: []
components:
  schemas:
    TransactionCreateResponse:
      title: Transaction creation scheme (response) (1)
      type: object
      x-examples:
        Example:
          data:
            request_id: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
            status: 2
            err_msg: null
        example-2:
          data:
            request_id: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
            status: 3
            err_msg: 3000
      description: ''
      properties:
        data:
          type: object
          properties:
            request_id:
              type: string
            status:
              type: string
            err_msg:
              type: string
    TransactionCreateRequest:
      title: Transaction creation scheme (1)
      type: object
      x-examples: {}
      description: ''
      properties:
        request_id:
          type: string
          description: uuid v4
        data:
          type: array
          items:
            type: object
            properties:
              wallet:
                type: string
                description: existing wallet number of the system user
              amount:
                type: string
              description:
                type: string
                description: message about the funds receipt. Will be displayed in the _Transactions_ tab
    TransactionStatusRequest:
      title: TarnsactionStatusRequest (1)
      type: object
      x-examples:
        example: {}
      description: ''
      properties:
        request_id:
          type: string
          minLength: 16
          maxLength: 255
          example: c02e79a2-d30c-46e3-b3dd-c0e6a987acf8
    Country:
      title: Country
      type: object
      description: ''
      properties:
        id:
          type: number
        youtube_id:
          type: string
        code:
          type: string
        code_aplha3:
          type: string
        name:
          type: string
    Profile:
      title: Profile
      type: object
      properties:
        id:
          type: number
        user_id:
          type: number
        first_name:
          type: string
        last_name:
          type: string
        middle_name:
          type: string
        name:
          type: string
        region:
          type: string
        city:
          type: string
        address:
          type: string
        lang:
          type: string
        tax_id:
          type: string
        business_id:
          type: string
        is_real_address:
          type: boolean
        province:
          type: string
        real_province:
          type: string
        real_city:
          type: string
        real_adress:
          type: string
        real_postcode:
          type: string
        postcode:
          type: string
        company_name:
          type: string
  securitySchemes:
    Client credentials:
      type: oauth2
      flows:
        clientCredentials:
          refreshUrl: 'https://mcpay,io/oauth/token'
          scopes: {}
          tokenUrl: 'https://mcpay,io/oauth/token'
      description: Access to McPayments API
    Auth code:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://mcpay,io/oauth/authorize'
          tokenUrl: 'https://mcpay,io/oauth/token'
          scopes:
            user.channels: Channels assigned to user
            user.common: 'User full english profile '
            user.balance: 'User balance '
          refreshUrl: 'https://mcpay,io/oauth/token'
      description: Basic auth_code flow with redirect and callback
  examples: {}
tags:
  - name: Auth
  - name: User
  - name: Payments
security: []
